import pprint
show_ver = """

>>>>> show version data <<<<<

Cisco IOS Software, C880 Software (C880DATA-UNIVERSALK9-M), Version 15.0(1)M4, RELEASE SOFTWARE (fc1)

Technical Support: http://www.cisco.com/techsupport

Copyright (c) 1986-2010 by Cisco Systems, Inc.

Compiled Fri 29-Oct-10 00:02 by prod_rel_team

ROM: System Bootstrap, Version 12.4(22r)YB5, RELEASE SOFTWARE (fc1)



twb-sf-881 uptime is 7 weeks, 5 days, 19 hours, 23 minutes

System returned to ROM by reload at 15:33:36 PST Fri Feb 28 2014

System restarted at 15:34:09 PST Fri Feb 28 2014

System image file is "flash:c880data-universalk9-mz.150-1.M4.bin"

Last reload type: Normal Reload

Last reload reason: Reload Command



Cisco 881 (MPC8300) processor (revision 1.0) with 236544K/25600K bytes of memory.

Processor board ID FTX1000038X



5 FastEthernet interfaces

1 Virtual Private Network (VPN) Module

256K bytes of non-volatile configuration memory.

126000K bytes of ATA CompactFlash (Read/Write)



License Info:

License UDI:

-------------------------------------------------

Device#   PID                   SN

-------------------------------------------------

*0        CISCO881-SEC-K9       FTX1000038X



License Information for 'c880-data'

    License Level: advipservices   Type: Permanent

    Next reboot license Level: advipservices



Configuration register is 0x2102

>>>>> end <<<<<"""

dict = {}
extracts = ['vendor', 'model', 'os_version', 'uptime', 'serial_number']

for i in range (len(extracts)):
  dict[(extracts[i])] = ''

lines = show_ver.split('\n')
#print lines

for line in lines:
  if 'Cisco IOS Software' in line:
    dict ['os_version'] = line
    dict ['vendor'] = line
  elif 'bytes of memory' in line:
    dict ['model'] = line
  elif 'Processor board ID' in line:
    dict ['serial_number'] = line
  elif ' uptime is ' in line:
    dict ['uptime'] = line

#get vendor, insert to dictionary 
vendor = dict['vendor'].split(' ')
vendor = str(vendor[0])
dict['vendor'] = vendor

# get os_version, insert to dictionary
os_version = dict['os_version'].split(',')

for i in os_version:
  if 'Version' in i:
    os_version = i.split(' ')
    os_version = os_version[-1]
dict['os_version'] = os_version

# get model, insert to dictionary

model = dict['model'].split(' ')
model = model[0] + ' ' + model [1]

dict['model'] = model

# get uptime, insert to dictionary
dict['uptime'] = dict['uptime'].strip('twb-sf-881 uptime is ')
#print dict['uptime']

# get serial_number, insert to dictionary

dict['serial_number'] = dict['serial_number'].strip('Processor board ID')

for i in dict:
  pprint.pprint(i)
  pprint.pprint (dict[i])
  print ''
  